<?php
// $Id$

/**
 * @file
 * An implementation of an input formatting module for a special non-html link 
 * syntax to Media Wiki
 *
 * This module, when configured, is responsible for translating user-inputted links of the form
 * '[wm: some Subject]' into the form '<a href="http://www.wm.com/index.php/some_Subject>some Subject</a>'
 * where wm represents a Media Wiki key and http://www.wm.com/index.php is 
 * the path to the Media Wiki
 */



/**
 * Implementation of hook_help().
 */
function wmfilter_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      return t('Easily link to Media Wiki sites.');
  }
}

/**
 * Implementation of hook_menu().
 */
function wmfilter_menu($may_cache) {
  $items = array();

//  if ($may_cache) {
    $items[] = array('path' => 'wmfilter', 'title' => t('Wiki filter prefixes'),
      'access' => user_access('access content'),
      'callback' => 'wmfilter_list',
	  'type' => MENU_CALLBACK);
//  }

  return $items;
}

/**
 * List wm filters.
 */
function wmfilter_list() {
      $output = t('Easily link to terms in various wiki-based sites by typing [prefix:term]<p>');

      $result = db_query("SELECT iw_prefix, iw_url from {interwiki}");
	  $header = array('Prefix', 'Translates to');
      while ($record = db_fetch_object($result)) {
// Strip out $1 from Media Wiki tables ...
         $url = preg_replace( '/\$1/', '', $record->iw_url);
         $rows[] = array ($record->iw_prefix . ":", $url);
      }
      $output .= 'Available prefixes are:<p>';
      $output .= theme('table',$header,$rows);
	  print theme("page", $output);
}



/**
 * Implementation of hook_filter().
 */
function wmfilter_filter($op, $delta = 0, $format = -1, $text = '') {
  switch ($op) {
    case 'list':
      return array(0 => t('MediaWiki Filter'));

    case 'description':
      return t('Easily link to Media Wiki sites'); 

    case 'process':

      $result = db_query("SELECT iw_prefix, iw_url from {interwiki}");
      while ($record = db_fetch_object($result)) {
// Strip out $1 from Media Wiki tables ...
         $url = preg_replace( '/\$1/', '', $record->iw_url);
         $matcha[$record->iw_prefix] = $url;
      }


      if (preg_match_all('/\[([^]]+)?:([^]]+)?\]/i', $text, $match)) {
        $target = variable_get('wmfilter_new_window', '_self');
        $index = 0;
        foreach($match[0] as $pattern_matched) {
          if (! ($matcha[$match[1][$index]] == "")) {
            $term = trim($match[2][$index]);
            $url_term = preg_replace('/\ /', '_', $term);
            $html = '<a href="' . $matcha[$match[1][$index]]. $url_term .'" title="Media Wiki reference on '. $term .'" target="'. $target .'">'. $term .'</a>';
            $text = str_replace($pattern_matched, $html, $text);
          }
          $index++;
        }
        return $debug . $text;
      }
      else { 
        return $text; 
      }

    case 'settings':
      $output = t('Easily link to terms in various wiki-based sites by typing [prefix:term]<p>');

      $result = db_query("SELECT iw_prefix, iw_url from {interwiki}");
	  $header = array('Prefix', 'Translates to');  // line added by Sheldon Rampton
      while ($record = db_fetch_object($result)) {
// Strip out $1 from Media Wiki tables ...
         $url = preg_replace( '/\$1/', '', $record->iw_url);
         $rows[] = array ($record->iw_prefix . ":", $url);
      }
      $output .= 'Available prefixes are:<p>';
      $output .= theme('table',$header,$rows);
      $output .= form_radios(t('Reference links open in'), 'wmfilter_new_window', variable_get('wmfilter_new_window', '_self'), array('_blank' => 'New Window', '_self' => 'Same Window'));
      return form_group(t('Media Wiki Filter'), $output);

    default:
      return $text;
  }
}


/**
 * Implementation of hook_filter_tips().
 */
function wmfilter_filter_tips($delta, $format, $long = false) {
  // Following line modified by Sheldon Rampton to add a link to the list of available prefixes.
  return t('Easily link to terms in various wiki-based sites by typing [prefix:term]. ') . l(t('See list of available prefixes.'),'wmfilter');
}

?>
